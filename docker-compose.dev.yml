version: "3.2"

services:
  rescueph_server:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    image: rescueph/server
    container_name: rescueph_server
    labels:
      rescueph: "true"
    networks:
      - rescueph_network
    environment:
      - MONGO_URI=${MONGO_URI}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - VERIFY_TOKEN=${VERIFY_TOKEN}
      - ACCESS_TOKEN=${ACCESS_TOKEN}
    volumes:
      - ./server:/usr/src/app
    ports:
      - 5000:5000
    links:
      - rescueph_db
    restart: on-failure
  rescueph_client:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    image: rescueph/client
    container_name: rescueph_client
    labels:
      rescueph: "true"
    networks:
      - rescueph_network
    volumes:
      - ./client:/usr/src/app
    ports:
      - 3000:3000
    links:
      - rescueph_server
    restart: on-failure
  rescueph_db:
    build: ./db
    image: rescueph/db
    container_name: rescueph_db
    labels:
      rescueph: "true"
    networks:
      - rescueph_network
    expose:
      - ${MONGO_PORT}
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - ./db/data:/data/db
    restart: on-failure

networks:
  rescueph_network:
    driver: bridge
